<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Next/Last";
menu[1] = "Continue"
menu[2] = "Inventory";
menu[3] = "Exit"

showinv=false
space = 64
mpos = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
move -= max(keyboard_check_pressed(vk_up),keyboard_check_pressed(ord('W')),0)
move += max(keyboard_check_pressed(vk_down),keyboard_check_pressed(ord('S')),0)
move += max(keyboard_check_pressed(vk_left))
move -= max(keyboard_check_pressed(vk_right))

if (move != -0)
    {
        mpos += move
    if (mpos &lt;0) mpos = array_length_1d(menu) -1;
    if (mpos &gt; array_length_1d(menu) - 1) mpos=0;
    
    }
    
var push;
push = max(keyboard_check_released(vk_enter))
if (push = 1) scr_menu();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(view_xview[0]+320);
draw_set_valign(view_yview[0]+240);
draw_set_color(c_white)

var m;
for (m = 0; m &lt; array_length_1d(menu); m+=1)
{  
    draw_text_colour(view_xview[0]+ space, view_yview + (m * space),string(menu[m]),c_red,c_red,c_red,c_red,1)
}
draw_sprite(sprite_index, 0 , view_xview[0] + 0, view_yview[0]-15 + (mpos * space))

draw_text_colour(view_xview[0]+475,view_yview[0]+350,"Exp:" +string(global.Exp)+ "/" +string(global.MaxExp), c_white,c_white,c_white,c_white,1)
draw_text_colour(view_xview[0]+475,view_yview[0]+400,"Level:" +string(global.level),c_white,c_white,c_white,c_white,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
